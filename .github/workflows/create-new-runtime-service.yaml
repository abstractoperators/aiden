run-name: Create new runtime service
name: Create new runtime service

on:
    workflow_dispatch:
        inputs:
            service-no:
                description: "Service number for the new runtime service"
                required: true

jobs:
    new-service:
        runs-on: ubuntu-latest
        steps:
            - name: Fail if no service number is provided
              run: |
                  if [ -z "${{ inputs.service-no }}" ]; then
                      echo "No service number provided"
                      exit 1
                  fi
            - name: Configure aws credentials for ELB
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  role-to-assume: arn:aws:iam::008971649127:role/AIDEN_GHA_ELB
                  aws-region: us-east-1

            - name: Register new target group
              run: |

                  TARGET_GROUP_ARN=$(aws elbv2 create-target-group \
                  --name "aiden-runtime-${{ inputs.service-no }}" \
                  --protocol HTTP \
                  --port 80 \
                  --vpc-id vpc-002b5682c46769515 \
                  --target-type ip \
                  --health-check-path "/ping" \
                  --health-check-interval-seconds 30 \
                  --query "TargetGroups[0].TargetGroupArn" \
                  --output text)

                  echo "TARGET_GROUP_ARN=$TARGET_GROUP_ARN" >> $GITHUB_ENV

            - name: Register new rules
              run: |
                  PRIORITY=$((100 + ${{ inputs.service-no }})) 

                  # HTTP listener
                  aws elbv2 create-rule \
                    --listener-arn arn:aws:elasticloadbalancing:us-east-1:008971649127:listener/app/aiden/c75e38614c895163/0418e5a3323e20fc \
                    --conditions "[{
                        \"Field\": \"host-header\",
                        \"Values\": [\"aiden-runtime-${{ inputs.service-no }}.aiden.space\"]
                        }]" \
                    --actions "[{
                        \"Type\": \"forward\",
                        \"TargetGroupArn\": \"${{ env.TARGET_GROUP_ARN }}\"
                        }]" \
                    --priority $PRIORITY

                  # HTTPS listener
                  aws elbv2 create-rule \
                    --listener-arn arn:aws:elasticloadbalancing:us-east-1:008971649127:listener/app/aiden/c75e38614c895163/5ccef0a9112d870c \
                    --conditions "[{
                      \"Field\": \"host-header\",
                      \"Values\": [\"aiden-runtime-${{ inputs.service-no }}.aiden.space\"]
                      }]" \
                    --actions "[{
                        \"Type\": \"forward\",
                        \"TargetGroupArn\": \"${{ env.TARGET_GROUP_ARN }}\"
                        }]" \
                    --priority $PRIORITY

            - name: Configure aws credentials for ECS
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  role-to-assume: arn:aws:iam::008971649127:role/AIDEN_GHA_ECS
                  aws-region: us-east-1

            - name: Create new service
              run: |
                  aws ecs create-service \
                    --cluster 
                    --launch-type FARGATE \
                    --service-name "aiden-runtime-${{ inputs.service-no }}" \
                    --task-definition arn:aws:ecs:us-east-1:008971649127:task-definition/aiden-agent-runtime \
                    --desired-count 1 \
                    --load-balancers "[{
                        \"targetGroupArn\": \"${{ env.TARGET_GROUP_ARN }}\",
                        \"containerName\": \"runtime\",
                        \"containerPort\": 80
                        }]" \
                    --network-configuration "{
                        \"awsvpcConfiguration\": {
                            \"subnets\": [\"subnet-03609df324958be8e\", \"subnet-0643691ae2f5f1e32\"],
                            \"securityGroups\": [\"sg-08dd9f6f9ecc9bfe9\"],
                            \"assignPublicIp\": \"ENABLED\"
                            }
                        }"

permissions:
    id-token: write
    contents: read
